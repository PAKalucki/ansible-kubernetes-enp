---
- hosts: master, worker
  gather_facts: false
  become: yes
  tasks:
    - name: "Add Kubernetes repository"
      yum_repository:
        name: kubernetes
        enabled: yes
        repo_gpgcheck: yes
        gpgkey: "{{ kubernetes_repo_gpgkey }}"
        state: present
        gpgcheck: yes
        description: "Kubernetes repository"
        baseurl: "{{ kubernetes_repo_baseurl }}"
        sslverify: no

    - name: "Add Docker repository"
      yum_repository:
        name: docker
        enabled: yes
        repo_gpgcheck: yes
        gpgkey: "{{ docker_repo_gpgkey }}"
        state: present
        gpgcheck: yes
        description: "Docker repository"
        baseurl: "{{ docker_repo_baseurl }}"
        sslverify: no

    - name: "Install packages with yum"
      yum:
        name: "{{ packages }} "
        state: present

    - name: "Set selinux to permissive mode"
      selinux:
        policy: targeted
        state: permissive

    - name: "Configure firewall"
      firewalld:
        state: enabled
        immediate: yes
        permanent: yes
        port: "{{ item }}"
      loop: "{{ ports }}"

    - name: "Set net.bridge.bridge-nf-call for CentOS"
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        create: yes
        state: present
        line: net.bridge.bridge-nf-call-iptables = 1

    - name: "Disable SWAP"
      shell: swapoff -a

    - name: "Disable SWAP permanently"
      replace:
        path: /etc/fstab
        regexp: '^.*swap.*$'
        replace: ''

    - name: "Enable and start Docker"
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: "Enable kubelet"
      systemd:
        name: kubelet
        enabled: yes

    - name: "Setup master"
      when: "inventory_hostname in groups['master']"
      block:
        - name: "Check if cluster is already running on host"
          shell: kubectl cluster-info
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf
          register: cluster_status
          ignore_errors: true

        - name: "Create cluster"
          when: "'running' not in cluster_status.stdout"
          shell: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
          register: kubeadm_output

        - name: "Install network add-on"
          when: install_network
          shell: kubectl apply -f {{ yaml_url }}
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: "Create join token"
          shell: kubeadm token create --print-join-command 2>/dev/null
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf
          register: create_output

    - name: "Save kubeadm join command from master"
      set_fact:
        kubeadm_join_command: "{{ hostvars['master01']['create_output']['stdout']|default('') }}"

    - name: "Setup workers"
      when: "inventory_hostname in groups['worker']"
      block:
        - name: "Check if worker is already running"
          systemd:
            name: kubelet
          register: kubelet_status

        - name: "Run kubeadm join"
          when: "kubelet_status.status['ActiveState'] == 'inactive'"
          shell: "{{ kubeadm_join_command }}"